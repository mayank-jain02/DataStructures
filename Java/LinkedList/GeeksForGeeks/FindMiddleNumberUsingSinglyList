Find the middle of a given linked list in C and Java
Given a singly linked list, find middle of the linked list. For example, if given linked list is 1->2->3->4->5 then output should be 3.

If there are even nodes, then there would be two middle nodes, we need to print second middle element. For example, if given linked list is 1->2->3->4->5->6 then output should be 4.

public class LinkedList {

	private Node head;
	private int size;
	
	public Node getHead() {
		return head;
	}
	public void setHead(Node head) {
		this.head = head;
	}
	
	public void insertAtFirst(int data) {

		Node node = new Node();
		node.setData(data);
		node.setNext(head);
		head = node;
		size++;
	}
	
	public void printList() {
		Node current = head;
		System.out.print(("HEAD ->"));
		while(current != null) {
			System.out.print(current.getData());
			System.out.print("->");
			current = current.getNext();
		}
		System.out.print("null");
	}
	
	public int findMiddleElement() {
		int middle = size/2 + 1;
		int i;
		Node node = head;
		for( i =1; i<=middle; i++) {
			node = node.getNext();
		}
		System.out.println(node.getNext().getData());
		return 0;
	}
}
